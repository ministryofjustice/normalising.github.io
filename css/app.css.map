{"version":3,"sources":["webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/core/_links.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_typography.scss","webpack://technology-diversity-statistics/./app/sass/app.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/vendor/_sass-mq.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_links.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_focused.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/settings/_colours-applied.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/core/_typography.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_spacing.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/core/_template.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/objects/_grid.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_clearfix.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_grid.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/objects/_main-wrapper.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/objects/_width-container.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/settings/_measurements.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/components/footer/_index.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_device-pixels.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/components/header/_index.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_shape-arrow.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/components/skip-link/_index.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/helpers/_visually-hidden.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/utilities/_visually-hidden.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/overrides/_display.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/overrides/_spacing.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/overrides/_typography.scss","webpack://technology-diversity-statistics/./node_modules/govuk-frontend/govuk/overrides/_width.scss","webpack://technology-diversity-statistics/./app/sass/loader.scss","webpack://technology-diversity-statistics/./app/sass/charts.scss"],"names":[],"mappings":";;AAQE,YCOA,gCCXkB,CDYlB,mCACA,iCCXF,CC8NQ,aH5NN,YCsBE,sBCpBF,CACF,CEEE,kBCME,8BAGF,qBC6CmB,CD5CnB,qCAGA,oBHRF,CEgBE,iBACE,aFdJ,CEiBE,oBACE,aFfJ,CEkBE,kBACE,aFhBJ,CEyBE,qCACE,aFpBJ,CCmMQ,aCkEF,oGACE,4BACA,cAKA,oBFtQN,CACF,CE2IE,sGAIE,aF3IJ,CEgLE,sLHnLA,aCUF,CCiLQ,aCRN,6JHhLE,UCWF,CACF,CE+ME,yEACE,aFzMJ,CE4ME,oCACE,aF1MJ,CEmNE,yEACE,aF9MJ,CK9DE,kBN+BA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,cANY,CAQd,mBAPY,CMhId,cAEA,aCwEI,kBNFR,CC8IQ,aI1NN,kBNkCE,UKIsB,CLlBtB,sBC4DF,CACF,CCyIQ,6BI1NN,kBNmJM,cAjBQ,CAmBN,cAlBU,CAoBZ,wBC3DN,CACF,CC6HQ,aI1NN,kBN8IM,cAZQ,CAaR,gBC7CN,CACF,CCuHQ,6BI1NN,kBCqFQ,kBNkBR,CACF,CK1FE,iBNiBA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,gBANY,CAQd,wBAPY,CMlHd,cAEA,aC0DI,kBNwCR,CCoGQ,aI5MN,iBNoBE,UKIsB,CLlBtB,sBCsGF,CACF,CC+FQ,6BI5MN,iBNqIM,cAjBQ,CAmBN,iBAlBU,CAoBZ,wBCjBN,CACF,CCmFQ,aI5MN,iBNgIM,cAZQ,CAaR,gBCHN,CACF,CC6EQ,6BI5MN,iBCuEQ,kBN4DR,CACF,CKtHE,iBNGA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,kBANY,CAQd,wBAPY,CMpGd,cAEA,aC4CI,kBNkFR,CC0DQ,aI9LN,iBNME,UKIsB,CLlBtB,sBCgJF,CACF,CCqDQ,6BI9LN,iBNuHM,cAjBQ,CAmBN,gBAlBU,CAoBZ,gBCyBN,CACF,CCyCQ,aI9LN,iBNkHM,cAZQ,CAaR,gBCuCN,CACF,CCmCQ,6BI9LN,iBCyDQ,kBNsGR,CACF,CKlJE,iBNXA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,cANY,CAQd,gBAPY,CMtFd,cAEA,aC8BI,kBN4HR,CCgBQ,aIhLN,iBNRE,UKIsB,CLlBtB,sBC0LF,CACF,CCWQ,6BIhLN,iBNyGM,cAjBQ,CAmBN,mBAlBU,CAoBZ,wBCmEN,CACF,CCDQ,aIhLN,iBNoGM,cAZQ,CAaR,gBCiFN,CACF,CCPQ,6BIhLN,iBC2CQ,kBNgJR,CACF,CK5KE,kBNrDA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,kBANY,CAQd,wBAPY,CMvEd,cAEA,kBAEA,aLkLJ,CCzBQ,aIhKN,kBNtCE,sBCmOF,CACF,CC9BQ,6BIhKN,kBNyFM,cAjBQ,CAmBN,mBAlBU,CAoBZ,wBCuGN,CACF,CCrCQ,aIhKN,kBNoFM,cAZQ,CAaR,gBCqHN,CACF,CKjME,iBN/DA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,kBANY,CAQd,wBAPY,CM7Dd,cAEA,kBACA,aLwMJ,CCxDQ,aItJN,iBNhDE,sBCkQF,CACF,CC7DQ,6BItJN,iBN+EM,cAjBQ,CAmBN,gBAlBU,CAoBZ,gBCsIN,CACF,CCpEQ,aItJN,iBN0EM,cAZQ,CAaR,gBCoJN,CACF,CC1EQ,6BItJN,iBASI,eL2NJ,CACF,CKxNE,iBN5EA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,cANY,CAQd,gBAPY,CMhDd,cAEA,aL+NJ,CC3FQ,aIzIN,iBN7DE,sBCqSF,CACF,CChGQ,6BIzIN,iBNkEM,cAjBQ,CAmBN,mBAlBU,CAoBZ,wBCyKN,CACF,CCvGQ,aIzIN,iBN6DM,cAZQ,CAaR,gBCuLN,CACF,CK5OE,+BN5DA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,kBANY,CAQd,wBAPY,CMrCd,aCjBI,kBNsQR,CC1HQ,aI/HN,+BNzDE,UKIsB,CLlBtB,sBCoUF,CACF,CC/HQ,6BI/HN,+BNwDM,cAjBQ,CAmBN,gBAlBU,CAoBZ,gBC6MN,CACF,CC3IQ,aI/HN,+BNmDM,cAZQ,CAaR,gBC2NN,CACF,CCjJQ,6BI/HN,+BCNQ,kBN0RR,CACF,CKzQE,0BNxEA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,cANY,CAQd,gBAPY,CMzBd,aC7BI,kBN+SR,CCnKQ,aInHN,0BNrEE,UKIsB,CLlBtB,sBC6WF,CACF,CCxKQ,6BInHN,0BN4CM,cAjBQ,CAmBN,mBAlBU,CAoBZ,wBCsPN,CACF,CCpLQ,aInHN,0BNuCM,cAZQ,CAaR,gBCoQN,CACF,CC1LQ,6BInHN,0BClBQ,kBNmUR,CACF,CKtSE,cNpFA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,iBANY,CAQd,wBAPY,CMbd,aCzCI,kBNwVR,CC5MQ,aIvGN,cNjFE,UKIsB,CLlBtB,sBCsZF,CACF,CCjNQ,6BIvGN,cNgCM,cAjBQ,CAmBN,cAlBU,CAoBZ,gBC+RN,CACF,CC7NQ,aIvGN,cN2BM,cAZQ,CAaR,eC6SN,CACF,CCnOQ,6BIvGN,cC9BQ,kBN4WR,CACF,CKnUE,eNhGA,aKnBkB,CLPlB,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,gBANY,CAQd,gBAPY,CMDd,aCrDI,kBNiYR,CCrPQ,aI3FN,eN7FE,UKIsB,CLlBtB,sBC+bF,CACF,CC1PQ,6BI3FN,eNoBM,cAjBQ,CAmBN,iBAlBU,CAoBZ,wBCwUN,CACF,CCtQQ,aI3FN,eNeM,cAZQ,CAaR,eCsVN,CACF,CC5QQ,6BI3FN,eC1CQ,kBNqZR,CACF,CKhVE,iEACE,eLmVJ,CCrRQ,6BI/DN,iEAII,gBLoVJ,CACF,CKjVE,2FCrFM,gBN2aR,CC/RQ,6BIvDN,2FC9EQ,gBNyaR,CACF,CKtVE,sLAME,eLwVJ,CC7SQ,6BIjDN,sLASI,gBL6VJ,CACF,COjhBE,gBAGE,wBHoB6B,CGhB7B,8BACG,2BAEK,qBP+gBZ,CC9TQ,cM3NN,gBAeI,iBP8gBJ,CACF,CO1gBE,sBAGE,SAEA,qBP0gBJ,CQziBE,gBAEE,mBACA,iBR2iBJ,CSxiBE,sBACE,WACA,cACA,UT0iBJ,CQ5iBI,+BEyCF,sBAEE,WAEF,cVqgBF,CCxVQ,6BO1NJ,+BE+CA,UACA,UVugBF,CACF,CQxjBI,6BEyCF,sBAEE,WAEF,cVihBF,CCpWQ,6BO1NJ,6BE+CA,eACA,UVmhBF,CACF,CQpkBI,4BEyCF,sBAEE,WAEF,cV6hBF,CChXQ,6BO1NJ,4BE+CA,UACA,UV+hBF,CACF,CQhlBI,8BEyCF,sBAEE,WAEF,cVyiBF,CC5XQ,6BO1NJ,8BE+CA,eACA,UV2iBF,CACF,CQ5lBI,kCEyCF,sBAEE,WAEF,cVqjBF,CCxYQ,6BO1NJ,kCE+CA,UACA,UVujBF,CACF,CQxmBI,wBEyCF,sBAEE,WAEF,cVikBF,CCpZQ,6BO1NJ,wBE+CA,WACA,UVmkBF,CACF,CQ3mBI,4CEgCF,sBAIA,cV4kBF,CC/ZQ,6BOjNJ,4CEsCA,UACA,UV8kBF,CACF,CQtnBI,0CEgCF,sBAIA,cVulBF,CC1aQ,6BOjNJ,0CEsCA,eACA,UVylBF,CACF,CQjoBI,yCEgCF,sBAIA,cVkmBF,CCrbQ,6BOjNJ,yCEsCA,UACA,UVomBF,CACF,CQ5oBI,2CEgCF,sBAIA,cV6mBF,CChcQ,6BOjNJ,2CEsCA,eACA,UV+mBF,CACF,CQvpBI,+CEgCF,sBAIA,cVwnBF,CC3cQ,6BOjNJ,+CEsCA,UACA,UV0nBF,CACF,CQlqBI,qCEgCF,sBAIA,cVmoBF,CCtdQ,6BOjNJ,qCEsCA,WACA,UVqoBF,CACF,CW5oBE,oBAvBA,cACA,iBACA,mBXuqBF,CCleQ,6BUhLN,oBAfE,iBACA,mBXqqBF,CACF,CW7oBE,qELyBM,gBNynBR,CC7eQ,6BUrKN,qELgCQ,gBNunBR,CACF,CYvoBE,uBA1DA,eCTiB,CDYjB,iBCgBkB,CDflB,gBZmsBF,CYhsBE,kCAmDA,uBA7CE,+DACA,4DZ8rBF,CACF,CC/fQ,6BWpJN,uBAvCE,iBCPW,CDQX,gBZ8rBF,CY3rBE,kCAmCF,uBA7BI,+DACA,4DZyrBF,CACF,CACF,CC3gBQ,0BWpJN,uBArBE,kBACA,gBZwrBF,CYprBE,kCAgBF,uBAfI,kBACA,gBZurBF,CACF,CACF,Cc/tBE,cfbA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,iBANY,CAQd,wBAPY,COtDV,qCQvDJ,6BACA,aVZgB,CUahB,kBduuBJ,CCtiBQ,aaxMN,cfEE,sBCgvBF,CACF,CC3iBQ,6BaxMN,cfiIM,cAjBQ,CAmBN,cAlBU,CAoBZ,gBConBN,CACF,CCljBQ,aaxMN,cf4HM,cAZQ,CAaR,eCkoBN,CACF,CCxjBQ,6BaxMN,cRmEQ,oCNisBR,CACF,Cc/uBM,0GAIE,adovBR,CchvBI,0BXvCA,8BAEF,aCwDwB,CDvDxB,qBC6CmB,CD5CnB,qCAGA,oBHuxBF,CczuBE,6BRgBM,gBQbJ,SACA,+Bd4uBJ,CCplBQ,6Ba5JN,6BRuBQ,kBN6tBR,CACF,Cc9uBE,oBAGE,aACA,mBACA,kBAEI,eAGI,qBAGA,sBdivBZ,Cc9uBE,yBACE,iBDvDgB,CCwDhB,mBACA,gBdivBJ,Cc9uBE,+BAGU,MdivBZ,CCrnBQ,6Ba/HN,+BAMQ,gBdmvBR,CACF,CchvBE,4BACE,qBACA,kBAIA,kBdgvBJ,CCjoBQ,6BarHN,4BAII,kBdsvBJ,CACF,CclvBE,mCACE,oBdqvBJ,CclvBE,8BACE,qBACA,eArG+B,CAsG/B,kBACA,qDAIA,4BACA,0BACA,4BACA,kBACA,qBACA,kBdkvBJ,Ce51BE,yID6FA,8BAMI,uDd6vBJ,CACF,CcpvBE,2BACE,aACA,mBACA,SduvBJ,CcpvBE,2BACE,kBduvBJ,CcpvBE,gCACE,qBACA,kBACA,iBduvBJ,CcpvBE,uBRpEM,mBQsEJ,oBAIA,+BdovBJ,CClrBQ,6BaxEN,uBR7DQ,kBN2zBR,CACF,CCvrBQ,6BaxEN,uBAII,mBd+vBJ,CACF,Cc3vBE,0BAGE,aACA,mBACA,kBAEI,cd8vBR,Cc3vBE,uBACE,qBACA,iBDxIgB,CCyIhB,kBDhJW,CCiJX,gBD1IgB,CC2IhB,mBAIQ,YAEJ,ad6vBR,CCntBQ,6BarDN,uBAgBQ,gBd6vBR,CACF,CCztBQ,6Ba7BJ,qDAGU,Wd0vBZ,CACF,CcvvBE,oBACE,SACA,UACA,gBAEQ,oBDjLG,CCiLH,edyvBZ,CCxuBQ,6BabJ,+BAEU,kCdyvBZ,CctvBE,+BAEU,kCdyvBZ,CACF,CctvBE,yBR1IM,kBNm4BR,CCvvBQ,6BaFN,yBRnIQ,kBNg4BR,CACF,Cc1vBE,oCACE,ed6vBJ,CgBz9BE,cjBIA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,iBANY,CAQd,wBAPY,CiBhId,8BACA,UAVkB,CAWlB,kBhBi+BJ,CC7wBQ,aezNN,cjBmBE,sBCu9BF,CACF,CClxBQ,6BezNN,cjBkJM,cAjBQ,CAmBN,cAlBU,CAoBZ,gBC21BN,CACF,CCzxBQ,aezNN,cjB6IM,cAZQ,CAaR,eCy2BN,CACF,CgBh/BE,qCACE,eACA,oBhBm/BJ,CgBj/BI,gEACE,UhBm/BN,CgB/+BE,yBAEE,kBACA,oBACA,iBACA,gChBi/BJ,CSzgCE,+BACE,WACA,cACA,UT2gCJ,CgBn/BE,wBACE,qBACA,gBhBs/BJ,CgBn/BE,8BACE,kBACA,SACA,iBACA,kBACA,kBhBs/BJ,CgBn/BE,6CACE,WACA,YACA,SACA,qBhBs/BJ,CgBn/BE,4BjBzCA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,kBANY,CAQd,aAPY,CiBpFd,qBACA,kBhB4/BJ,CCn1BQ,ae5KN,4BjB1BE,sBC6hCF,CACF,CCx1BQ,6Be5KN,4BjBqGM,cAjBQ,CAmBN,gBAlBU,CAoBZ,aCi6BN,CACF,CC/1BQ,ae5KN,4BjBgGM,cAZQ,CAaR,aC+6BN,CACF,CgB3gCE,oBACE,oBhB8gCJ,CgB5gCI,qDAEE,UhB6gCN,CgB1gCI,0BACE,yBhB4gCN,CgBzgCI,0BbvDA,8BAEF,aCwDwB,CDvDxB,qBC6CmB,CD5CnB,qCAGA,oBHgkCF,CgBlgCE,8BjBzEA,gCCXkB,CDYlB,mCACA,kCAgDA,gBiB4BE,qBACA,eACA,ahBqgCJ,CCh4BQ,ae5IN,8BjB1DE,sBC0kCF,CACF,CgBxgCI,yEAEE,oBhBygCN,CgBtgCI,yEAGE,mBAGA,uBhBogCN,CgBhgCI,oCACE,gBACA,ehBkgCN,CgB9/BE,kCACE,qBACA,mBjBzGF,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,kBANY,CAQd,wBC2+BN,CC55BQ,ae9GN,kCjBxFE,sBCsmCF,CACF,CCj6BQ,6Be9GN,kCjBuCM,cAjBQ,CAmBN,gBAlBU,CAoBZ,gBC0+BN,CACF,CCx6BQ,ae9GN,kCjBkCM,cAZQ,CAaR,gBCw/BN,CACF,CgBthCE,2CAEE,qBhByhCJ,CgBthCE,oBVzCM,mBU2CJ,kBhByhCJ,CCx7BQ,6BenGN,oBVlCQ,kBNikCR,CACF,CC77BQ,6BenGN,oBAKI,aACA,kBH9Fc,CG+Fd,WACA,kBhB+hCJ,CACF,CCr8BQ,6BevFN,uBAEI,aACA,iBHvGc,CGwGd,UhB+hCJ,CACF,CgB5hCE,2BjBtIA,gCCXkB,CDYlB,mCACA,kCAsCA,gBA0FI,cALU,CAOR,iBANY,CAQd,wBAPY,CiBSd,aACA,kBACA,SACA,QACA,SACA,UACA,SACA,UAxJkB,CAyJlB,ehBqiCJ,CCh+BQ,ae/EN,2BjBvHE,sBC0qCF,CACF,CCr+BQ,6Be/EN,2BjBQM,cAjBQ,CAmBN,cAlBU,CAoBZ,gBC8iCN,CACF,CC5+BQ,ae/EN,2BjBGM,cAZQ,CAaR,eC4jCN,CACF,CgBrjCI,iCACE,yBhBujCN,CgBpjCI,iCblJA,8BAEF,aCwDwB,CDvDxB,qBC6CmB,CD5CnB,qCAGA,oBHssCF,CgBvjCI,iCCnIF,oBDoIwE,CClIxE,QACA,SAwBE,+CACQ,uCAER,sEACA,yBDsGE,WACA,ehBikCN,CCzgCQ,6Be/EN,2BA2BI,QhBikCJ,CACF,CgB7jCI,uCC/IF,oBDgJsE,CC9ItE,QACA,SAYE,kDACQ,0CAER,sEACA,2BjBqsCJ,CgBpkCE,0BAEE,cACA,SACA,UACA,ehBukCJ,CCliCQ,6Be1CN,0BV3FQ,kBN2qCR,CACF,CgBxkCI,uCACE,ahB2kCN,CC3iCQ,6BejCJ,uCAGI,YhB6kCN,CACF,CgB1kCI,sCACE,YhB4kCN,CCnjCQ,6Be1BJ,sCAGI,ahB8kCN,CACF,CgB3kCI,4CACE,ahB6kCN,CC3jCQ,6BedN,+BAEI,SACA,cACA,gBhB4kCJ,CACF,CgBzkCE,2CACE,gBhB4kCJ,CgBzkCE,+BACE,eACA,+BhB4kCJ,CC5kCQ,6BeFN,+BAKI,qBACA,kBACA,cACA,QhB6kCJ,CACF,CgB3kCI,iCjB9NF,gCCXkB,CDYlB,mCACA,kCAgDA,gBAgFI,cALU,CAOR,iBANY,CAQd,wBAPY,CiBiGZ,kBhBmlCN,CC9lCQ,aeSJ,iCjB/MA,sBCwyCF,CACF,CCnmCQ,6BeSJ,iCjBhFI,cAjBQ,CAmBN,cAlBU,CAoBZ,gBC4qCN,CACF,CC1mCQ,aeSJ,iCjBrFI,cAZQ,CAaR,eC0rCN,CACF,CgB/lCM,8IAGE,ahBgmCR,CgB3lCM,+CACE,ahB6lCR,CgBxlCE,0CACE,chB2lCJ,CC3nCQ,aeoCJ,cACE,sBACA,cACA,sBhB2lCJ,CgBvlCE,6CACE,YhB0lCJ,CgBtlCI,qDAEE,ahBwlCN,CgBplCI,0BACE,YhBslCN,CACF,CkBj3CE,iBCiDA,4BAEA,oBACA,qBAGA,mBAEA,0BACA,6BACA,uCACQ,+BAKR,6BpBnDA,gCCXkB,CDYlB,mCACA,kCAgII,cALU,CAOR,iBANY,CAQd,wBAPY,CmBvId,cACA,iBlB63CJ,CmBj0CE,+CAEE,0BAEA,qBACA,sBACA,yBAEA,2BACA,oBACA,iCACQ,yBAER,6BnB+zCJ,CC5qCQ,aiBnON,iBnB6BE,sBCs3CF,CACF,CEzrCE,qHHnLA,aC+2CF,CCprCQ,aCRN,qHHhLE,UCg3CF,CACF,CCzrCQ,6BiBnON,iBnB4JM,cAjBQ,CAmBN,cAlBU,CAoBZ,gBCkwCN,CACF,CChsCQ,aiBnON,iBnBuJM,cAZQ,CAaR,eCgxCN,CACF,CkB/5CI,mCAVF,iBAgBI,gEACA,6DlB65CJ,CACF,CkB35CI,uBACE,uBACA,iBACA,qBlB65CN,CS56CE,sBACE,WACA,cACA,UT+6CJ,CoB17CE,uBDsBA,oBAOA,kBnB26CF,CoBp8CE,wDDWA,4BAEA,oBACA,qBAGA,mBAGA,0BACA,6BACA,uCACQ,+BAOR,4BnBk7CF,CmBj5CE,+EAEE,0BAEA,qBACA,sBACA,yBAEA,2BACA,oBACA,iCACQ,yBAER,6BnB+4CJ,CqBx9CE,yBACE,wBrB29CJ,CqBx9CE,+BACE,8BrB29CJ,CqBx9CE,wBACE,uBrB29CJ,CqBx9CE,uBACE,sBrB29CJ,CC5wCQ,aoB3MJ,6BACE,sBrB29CJ,CACF,CsBz8CI,mBhByCI,kBNm6CR,CCrxCQ,6BqBvLJ,mBhBgDM,kBNg6CR,CACF,CsBz8CM,uBhBmCE,sBN06CR,CC9xCQ,6BqB/KF,uBhB0CI,sBNu6CR,CACF,CsBl9CM,yBhBmCE,wBNm7CR,CCvyCQ,6BqB/KF,yBhB0CI,wBNg7CR,CACF,CsB39CM,0BhBmCE,yBN47CR,CChzCQ,6BqB/KF,0BhB0CI,yBNy7CR,CACF,CsBp+CM,wBhBmCE,uBNq8CR,CCzzCQ,6BqB/KF,wBhB0CI,uBNk8CR,CACF,CsBr/CI,mBhByCI,oBNg9CR,CCl0CQ,6BqBvLJ,mBhBgDM,oBN68CR,CACF,CsBt/CM,uBhBmCE,wBNu9CR,CC30CQ,6BqB/KF,uBhB0CI,wBNo9CR,CACF,CsB//CM,yBhBmCE,0BNg+CR,CCp1CQ,6BqB/KF,yBhB0CI,0BN69CR,CACF,CsBxgDM,0BhBmCE,2BNy+CR,CC71CQ,6BqB/KF,0BhB0CI,2BNs+CR,CACF,CsBjhDM,wBhBmCE,yBNk/CR,CCt2CQ,6BqB/KF,wBhB0CI,yBN++CR,CACF,CsBliDI,mBhByCI,qBN6/CR,CC/2CQ,6BqBvLJ,mBhBgDM,qBN0/CR,CACF,CsBniDM,uBhBmCE,yBNogDR,CCx3CQ,6BqB/KF,uBhB0CI,yBNigDR,CACF,CsB5iDM,yBhBmCE,2BN6gDR,CCj4CQ,6BqB/KF,yBhB0CI,2BN0gDR,CACF,CsBrjDM,0BhBmCE,4BNshDR,CC14CQ,6BqB/KF,0BhB0CI,4BNmhDR,CACF,CsB9jDM,wBhBmCE,0BN+hDR,CCn5CQ,6BqB/KF,wBhB0CI,0BN4hDR,CACF,CsB/kDI,mBhByCI,qBN0iDR,CC55CQ,6BqBvLJ,mBhBgDM,qBNuiDR,CACF,CsBhlDM,uBhBmCE,yBNijDR,CCr6CQ,6BqB/KF,uBhB0CI,yBN8iDR,CACF,CsBzlDM,yBhBmCE,2BN0jDR,CC96CQ,6BqB/KF,yBhB0CI,2BNujDR,CACF,CsBlmDM,0BhBmCE,4BNmkDR,CCv7CQ,6BqB/KF,0BhB0CI,4BNgkDR,CACF,CsB3mDM,wBhBmCE,0BN4kDR,CCh8CQ,6BqB/KF,wBhB0CI,0BNykDR,CACF,CsB5nDI,mBhByCI,qBNulDR,CCz8CQ,6BqBvLJ,mBhBgDM,qBNolDR,CACF,CsB7nDM,uBhBmCE,yBN8lDR,CCl9CQ,6BqB/KF,uBhB0CI,yBN2lDR,CACF,CsBtoDM,yBhBmCE,2BNumDR,CC39CQ,6BqB/KF,yBhB0CI,2BNomDR,CACF,CsB/oDM,0BhBmCE,4BNgnDR,CCp+CQ,6BqB/KF,0BhB0CI,4BN6mDR,CACF,CsBxpDM,wBhBmCE,0BNynDR,CC7+CQ,6BqB/KF,wBhB0CI,0BNsnDR,CACF,CsBzqDI,mBhByCI,qBNooDR,CCt/CQ,6BqBvLJ,mBhBgDM,qBNioDR,CACF,CsB1qDM,uBhBmCE,yBN2oDR,CC//CQ,6BqB/KF,uBhB0CI,yBNwoDR,CACF,CsBnrDM,yBhBmCE,2BNopDR,CCxgDQ,6BqB/KF,yBhB0CI,2BNipDR,CACF,CsB5rDM,0BhBmCE,4BN6pDR,CCjhDQ,6BqB/KF,0BhB0CI,4BN0pDR,CACF,CsBrsDM,wBhBmCE,0BNsqDR,CC1hDQ,6BqB/KF,wBhB0CI,0BNmqDR,CACF,CsBttDI,mBhByCI,qBNirDR,CCniDQ,6BqBvLJ,mBhBgDM,qBN8qDR,CACF,CsBvtDM,uBhBmCE,yBNwrDR,CC5iDQ,6BqB/KF,uBhB0CI,yBNqrDR,CACF,CsBhuDM,yBhBmCE,2BNisDR,CCrjDQ,6BqB/KF,yBhB0CI,2BN8rDR,CACF,CsBzuDM,0BhBmCE,4BN0sDR,CC9jDQ,6BqB/KF,0BhB0CI,4BNusDR,CACF,CsBlvDM,wBhBmCE,0BNmtDR,CCvkDQ,6BqB/KF,wBhB0CI,0BNgtDR,CACF,CsBnwDI,mBhByCI,qBN8tDR,CChlDQ,6BqBvLJ,mBhBgDM,qBN2tDR,CACF,CsBpwDM,uBhBmCE,yBNquDR,CCzlDQ,6BqB/KF,uBhB0CI,yBNkuDR,CACF,CsB7wDM,yBhBmCE,2BN8uDR,CClmDQ,6BqB/KF,yBhB0CI,2BN2uDR,CACF,CsBtxDM,0BhBmCE,4BNuvDR,CC3mDQ,6BqB/KF,0BhB0CI,4BNovDR,CACF,CsB/xDM,wBhBmCE,0BNgwDR,CCpnDQ,6BqB/KF,wBhB0CI,0BN6vDR,CACF,CsBhzDI,mBhByCI,qBN2wDR,CC7nDQ,6BqBvLJ,mBhBgDM,qBNwwDR,CACF,CsBjzDM,uBhBmCE,yBNkxDR,CCtoDQ,6BqB/KF,uBhB0CI,yBN+wDR,CACF,CsB1zDM,yBhBmCE,2BN2xDR,CC/oDQ,6BqB/KF,yBhB0CI,2BNwxDR,CACF,CsBn0DM,0BhBmCE,4BNoyDR,CCxpDQ,6BqB/KF,0BhB0CI,4BNiyDR,CACF,CsB50DM,wBhBmCE,0BN6yDR,CCjqDQ,6BqB/KF,wBhB0CI,0BN0yDR,CACF,CsB71DI,mBhByCI,qBNwzDR,CC1qDQ,6BqBvLJ,mBhBgDM,qBNqzDR,CACF,CsB91DM,uBhBmCE,yBN+zDR,CCnrDQ,6BqB/KF,uBhB0CI,yBN4zDR,CACF,CsBv2DM,yBhBmCE,2BNw0DR,CC5rDQ,6BqB/KF,yBhB0CI,2BNq0DR,CACF,CsBh3DM,0BhBmCE,4BNi1DR,CCrsDQ,6BqB/KF,0BhB0CI,4BN80DR,CACF,CsBz3DM,wBhBmCE,0BN01DR,CC9sDQ,6BqB/KF,wBhB0CI,0BNu1DR,CACF,CsB14DI,oBhByCI,mBNq2DR,CCvtDQ,6BqBvLJ,oBhBgDM,mBNk2DR,CACF,CsB34DM,wBhBmCE,uBN42DR,CChuDQ,6BqB/KF,wBhB0CI,uBNy2DR,CACF,CsBp5DM,0BhBmCE,yBNq3DR,CCzuDQ,6BqB/KF,0BhB0CI,yBNk3DR,CACF,CsB75DM,2BhBmCE,0BN83DR,CClvDQ,6BqB/KF,2BhB0CI,0BN23DR,CACF,CsBt6DM,yBhBmCE,wBNu4DR,CC3vDQ,6BqB/KF,yBhB0CI,wBNo4DR,CACF,CsBv7DI,oBhByCI,qBNk5DR,CCpwDQ,6BqBvLJ,oBhBgDM,qBN+4DR,CACF,CsBx7DM,wBhBmCE,yBNy5DR,CC7wDQ,6BqB/KF,wBhB0CI,yBNs5DR,CACF,CsBj8DM,0BhBmCE,2BNk6DR,CCtxDQ,6BqB/KF,0BhB0CI,2BN+5DR,CACF,CsB18DM,2BhBmCE,4BN26DR,CC/xDQ,6BqB/KF,2BhB0CI,4BNw6DR,CACF,CsBn9DM,yBhBmCE,0BNo7DR,CCxyDQ,6BqB/KF,yBhB0CI,0BNi7DR,CACF,CsBp+DI,oBhByCI,sBN+7DR,CCjzDQ,6BqBvLJ,oBhBgDM,sBN47DR,CACF,CsBr+DM,wBhBmCE,0BNs8DR,CC1zDQ,6BqB/KF,wBhB0CI,0BNm8DR,CACF,CsB9+DM,0BhBmCE,4BN+8DR,CCn0DQ,6BqB/KF,0BhB0CI,4BN48DR,CACF,CsBv/DM,2BhBmCE,6BNw9DR,CC50DQ,6BqB/KF,2BhB0CI,6BNq9DR,CACF,CsBhgEM,yBhBmCE,2BNi+DR,CCr1DQ,6BqB/KF,yBhB0CI,2BN89DR,CACF,CsBjhEI,oBhByCI,sBN4+DR,CC91DQ,6BqBvLJ,oBhBgDM,sBNy+DR,CACF,CsBlhEM,wBhBmCE,0BNm/DR,CCv2DQ,6BqB/KF,wBhB0CI,0BNg/DR,CACF,CsB3hEM,0BhBmCE,4BN4/DR,CCh3DQ,6BqB/KF,0BhB0CI,4BNy/DR,CACF,CsBpiEM,2BhBmCE,6BNqgER,CCz3DQ,6BqB/KF,2BhB0CI,6BNkgER,CACF,CsB7iEM,yBhBmCE,2BN8gER,CCl4DQ,6BqB/KF,yBhB0CI,2BN2gER,CACF,CsB9jEI,oBhByCI,sBNyhER,CC34DQ,6BqBvLJ,oBhBgDM,sBNshER,CACF,CsB/jEM,wBhBmCE,0BNgiER,CCp5DQ,6BqB/KF,wBhB0CI,0BN6hER,CACF,CsBxkEM,0BhBmCE,4BNyiER,CC75DQ,6BqB/KF,0BhB0CI,4BNsiER,CACF,CsBjlEM,2BhBmCE,6BNkjER,CCt6DQ,6BqB/KF,2BhB0CI,6BN+iER,CACF,CsB1lEM,yBhBmCE,2BN2jER,CC/6DQ,6BqB/KF,yBhB0CI,2BNwjER,CACF,CsB3mEI,oBhByCI,sBNskER,CCx7DQ,6BqBvLJ,oBhBgDM,sBNmkER,CACF,CsB5mEM,wBhBmCE,0BN6kER,CCj8DQ,6BqB/KF,wBhB0CI,0BN0kER,CACF,CsBrnEM,0BhBmCE,4BNslER,CC18DQ,6BqB/KF,0BhB0CI,4BNmlER,CACF,CsB9nEM,2BhBmCE,6BN+lER,CCn9DQ,6BqB/KF,2BhB0CI,6BN4lER,CACF,CsBvoEM,yBhBmCE,2BNwmER,CC59DQ,6BqB/KF,yBhB0CI,2BNqmER,CACF,CsBxpEI,oBhByCI,sBNmnER,CCr+DQ,6BqBvLJ,oBhBgDM,sBNgnER,CACF,CsBzpEM,wBhBmCE,0BN0nER,CC9+DQ,6BqB/KF,wBhB0CI,0BNunER,CACF,CsBlqEM,0BhBmCE,4BNmoER,CCv/DQ,6BqB/KF,0BhB0CI,4BNgoER,CACF,CsB3qEM,2BhBmCE,6BN4oER,CChgEQ,6BqB/KF,2BhB0CI,6BNyoER,CACF,CsBprEM,yBhBmCE,2BNqpER,CCzgEQ,6BqB/KF,yBhB0CI,2BNkpER,CACF,CsBrsEI,oBhByCI,sBNgqER,CClhEQ,6BqBvLJ,oBhBgDM,sBN6pER,CACF,CsBtsEM,wBhBmCE,0BNuqER,CC3hEQ,6BqB/KF,wBhB0CI,0BNoqER,CACF,CsB/sEM,0BhBmCE,4BNgrER,CCpiEQ,6BqB/KF,0BhB0CI,4BN6qER,CACF,CsBxtEM,2BhBmCE,6BNyrER,CC7iEQ,6BqB/KF,2BhB0CI,6BNsrER,CACF,CsBjuEM,yBhBmCE,2BNksER,CCtjEQ,6BqB/KF,yBhB0CI,2BN+rER,CACF,CsBlvEI,oBhByCI,sBN6sER,CC/jEQ,6BqBvLJ,oBhBgDM,sBN0sER,CACF,CsBnvEM,wBhBmCE,0BNotER,CCxkEQ,6BqB/KF,wBhB0CI,0BNitER,CACF,CsB5vEM,0BhBmCE,4BN6tER,CCjlEQ,6BqB/KF,0BhB0CI,4BN0tER,CACF,CsBrwEM,2BhBmCE,6BNsuER,CC1lEQ,6BqB/KF,2BhB0CI,6BNmuER,CACF,CsB9wEM,yBhBmCE,2BN+uER,CCnmEQ,6BqB/KF,yBhB0CI,2BN4uER,CACF,CsB/xEI,oBhByCI,sBN0vER,CC5mEQ,6BqBvLJ,oBhBgDM,sBNuvER,CACF,CsBhyEM,wBhBmCE,0BNiwER,CCrnEQ,6BqB/KF,wBhB0CI,0BN8vER,CACF,CsBzyEM,0BhBmCE,4BN0wER,CC9nEQ,6BqB/KF,0BhB0CI,4BNuwER,CACF,CsBlzEM,2BhBmCE,6BNmxER,CCvoEQ,6BqB/KF,2BhB0CI,6BNgxER,CACF,CsB3zEM,yBhBmCE,2BN4xER,CChpEQ,6BqB/KF,yBhB0CI,2BNyxER,CACF,CuB72EI,uBxBqIE,wBALU,CAOR,6BANY,CAQd,kCC0uEN,CC3pEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,wBAlBU,CAoBZ,uBCouEN,CACF,CClqEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,yBCkvEN,CACF,CuBh4EI,uBxBqIE,wBALU,CAOR,wBANY,CAQd,6BC6vEN,CC9qEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,wBAlBU,CAoBZ,kCCuvEN,CACF,CCrrEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,0BCqwEN,CACF,CuBn5EI,uBxBqIE,wBALU,CAOR,0BANY,CAQd,kCCgxEN,CCjsEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,2BAlBU,CAoBZ,kCC0wEN,CACF,CCxsEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,0BCwxEN,CACF,CuBt6EI,uBxBqIE,wBALU,CAOR,4BANY,CAQd,kCCmyEN,CCptEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,6BAlBU,CAoBZ,kCC6xEN,CACF,CC3tEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,0BC2yEN,CACF,CuBz7EI,uBxBqIE,wBALU,CAOR,4BANY,CAQd,kCCszEN,CCvuEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,0BAlBU,CAoBZ,0BCgzEN,CACF,CC9uEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,0BC8zEN,CACF,CuB58EI,uBxBqIE,wBALU,CAOR,wBANY,CAQd,0BCy0EN,CC1vEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,6BAlBU,CAoBZ,kCCm0EN,CACF,CCjwEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,0BCi1EN,CACF,CuB/9EI,uBxBqIE,wBALU,CAOR,2BANY,CAQd,kCC41EN,CC7wEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,wBAlBU,CAoBZ,0BCs1EN,CACF,CCpxEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,yBCo2EN,CACF,CuBl/EI,uBxBqIE,wBALU,CAOR,0BANY,CAQd,0BC+2EN,CChyEQ,6BsBxNJ,uBxBiJI,wBAjBQ,CAmBN,2BAlBU,CAoBZ,kCCy2EN,CACF,CCvyEQ,asBxNJ,uBxB4II,wBAZQ,CAaR,yBCu3EN,CACF,CuB9/EE,8BxBoCA,yBC89EF,CuB9/EE,2BxB0CA,yBCw9EF,CwB7gFE,oDACE,oBxBohFJ,CC7zEQ,6BuBxNN,+BAII,mBxBqhFJ,CACF,CwBlhFE,2BACE,oBxBqhFJ,CCt0EQ,6BuBhNN,2BAII,sBxBshFJ,CACF,CwBnhFE,yBACE,oBxBshFJ,CC/0EQ,6BuBxMN,yBAII,mBxBuhFJ,CACF,CwBphFE,0BACE,oBxBuhFJ,CCx1EQ,6BuBhMN,0BAII,sBxBwhFJ,CACF,CwBrhFE,4BACE,oBxBwhFJ,CCj2EQ,6BuBxLN,4BAII,mBxByhFJ,CACF,CyBjkFI,cACI,eACA,iBACA,oBACA,UACA,WACA,kBACA,mBAKA,mEACA,kBACA,yDACA,iDAGA,uBzBukFR,CyBpkFI,qBACI,UACA,WACA,mBACA,wBzB0kFR,CyBnkFI,yCANI,kBACA,MACA,OACA,UzBmlFR,CyBhlFI,oBACI,gBACA,UACA,WACA,kBAEA,YAIA,SACA,OzBqkFR,CyBjkFA,qCACI,GAEI,sBzBokFN,CyBlkFE,GAEI,uBzBokFN,CACF,CyBlkFA,6BACI,GAEI,sBzBokFN,CyBlkFE,GAEI,uBzBokFN,CACF,C0B9oFA,mBACI,Q1BgpFJ,CAtnFA,yBACI,gBACA,kBAynFJ,CAvnFA,8BACI,oFA0nFJ,CAvnFA,8DACI,WACA,eACA,gBACA,SACA,SA0nFJ,CAvnFA,QACI,WACA,SA0nFJ,CAvnFA,oCACI,QACI,WACA,UA0nFN,CACF,C","file":"dist/css/app.css","sourcesContent":["@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n@include govuk-exports(\"govuk/core/links\") {\n\n  %govuk-link {\n    @include govuk-link-common;\n    @include govuk-link-style-default;\n    @include govuk-link-print-friendly;\n  }\n\n  .govuk-link {\n    @extend %govuk-link;\n  }\n\n  // Variant classes should always be used in conjunction with the .govuk-link\n  // class, so we do not need the common link styles as they will be inherited.\n\n  .govuk-link--muted {\n    @include govuk-link-style-muted;\n  }\n\n  .govuk-link--text-colour {\n    @include govuk-link-style-text;\n  }\n\n  .govuk-link--no-visited-state {\n    @include govuk-link-style-no-visited-state;\n  }\n}\n","////\n/// @group helpers/typography\n////\n\n@import \"../tools/px-to-rem\";\n\n/// 'Common typography' helper\n///\n/// Sets the font family and associated properties, such as font smoothing. Also\n/// overrides the font for print.\n///\n/// @param {List} $font-family [$govuk-font-family] Font family to use\n/// @access public\n\n@mixin govuk-typography-common($font-family: $govuk-font-family) {\n  font-family: $font-family;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  // If the user is using the default GDS Transport font we need to include\n  // the font-face declarations.\n  //\n  // We do not need to include the GDS Transport font-face declarations if\n  // alphagov/govuk_template is being used since nta will already be included by\n  // default.\n  @if ($govuk-include-default-font-face) {\n    @include _govuk-font-face-gds-transport;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    font-family: $govuk-font-family-print;\n  }\n}\n\n/// Text colour helper\n///\n/// Sets the text colour, including a suitable override for print.\n///\n/// @access public\n\n@mixin govuk-text-colour {\n  color: $govuk-text-colour;\n\n  @include govuk-media-query($media-type: print) {\n    color: $govuk-print-text-colour;\n  }\n}\n\n/// Regular font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-regular($important: false) {\n  font-weight: $govuk-font-weight-regular if($important, !important, null);\n}\n\n/// Bold font weight helper\n///\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`. Generally Used to create override classes.\n/// @access public\n\n@mixin govuk-typography-weight-bold($important: false) {\n  font-weight: $govuk-font-weight-bold if($important, !important, null);\n}\n\n/// Convert line-heights specified in pixels into a relative value, unless\n/// they are already unit-less (and thus already treated as relative values)\n/// or the units do not match the units used for the font size.\n///\n/// @param {Number} $line-height Line height\n/// @param {Number} $font-size Font size\n/// @return {Number} The line height as either a relative value or unmodified\n///\n/// @access private\n\n@function _govuk-line-height($line-height, $font-size) {\n  @if not unitless($line-height) and unit($line-height) == unit($font-size) {\n    $line-height: $line-height / $font-size;\n  }\n\n  @return $line-height;\n}\n\n/// Responsive typography helper\n///\n/// Takes a 'font map' as an argument and uses it to create font-size and\n/// line-height declarations for different breakpoints, and for print.\n///\n/// Example font map:\n///\n/// $my-font-map: (\n///   null: (\n///     font-size: 16px,\n///     line-height: 20px\n///   ),\n///   tablet: (\n///     font-size: 19px,\n///     line-height: 25px\n///   ),\n///   print: (\n///     font-size: 14pt,\n///     line-height: 1.15\n///   )\n/// );\n///\n/// @param {Map} $font-map - Font map\n/// @param {Number} $override-line-height [false] - Non responsive custom line\n///   height. Omit to use the line height from the font map.\n/// @param {Boolean} $important [false] - Whether to mark declarations as\n///   `!important`.\n///\n/// @access public\n\n@mixin govuk-typography-responsive($size, $override-line-height: false, $important: false) {\n\n  @if not map-has-key($govuk-typography-scale, $size) {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  $font-map: map-get($govuk-typography-scale, $size);\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map-get($breakpoint-map, \"font-size\");\n    $font-size-rem: govuk-px-to-rem($font-size);\n\n    $line-height: _govuk-line-height(\n      $line-height: if(\n        $override-line-height,\n        $override-line-height,\n        map-get($breakpoint-map, \"line-height\")\n      ),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $line-height: $line-height if($important, !important, null);\n\n    @if $breakpoint == null {\n      font-size: $font-size;\n      @if $govuk-typography-use-rem {\n        font-size: $font-size-rem;\n      }\n      line-height: $line-height;\n    } @else if $breakpoint == \"print\" {\n      @include govuk-media-query($media-type: print) {\n        font-size: $font-size;\n        line-height: $line-height;\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        font-size: $font-size;\n        @if $govuk-typography-use-rem {\n          font-size: $font-size-rem;\n        }\n        line-height: $line-height;\n      }\n    }\n  }\n}\n\n/// Font helper\n///\n/// @param {Number} $size - Size of the font as it would appear on desktop -\n///   uses the responsive font size map\n/// @param {String} $weight [regular] - Weight: `bold` or `regular`\n/// @param {Boolean} $tabular [false] - Whether to use tabular numbers or not\n/// @param {Number} $line-height [false] - Line-height, if overriding the default\n///\n/// @access public\n\n@mixin govuk-font($size, $weight: regular, $tabular: false, $line-height: false) {\n  @if $tabular {\n    // if govuk-font-family-tabular is set use $govuk-font-family-tabular\n    @if $govuk-font-family-tabular {\n      @include govuk-typography-common($font-family: $govuk-font-family-tabular);\n    } @else {\n      @include govuk-typography-common;\n      -webkit-font-feature-settings: \"tnum\" 1;\n              font-feature-settings: \"tnum\" 1;\n\n      @supports (font-variant-numeric: tabular-nums) {\n        -webkit-font-feature-settings: normal;\n                font-feature-settings: normal;\n        font-variant-numeric: tabular-nums;\n      }\n    }\n  } @else {\n    @include govuk-typography-common;\n  }\n\n  @if $weight == regular {\n    @include govuk-typography-weight-regular;\n  } @else if $weight == bold {\n    @include govuk-typography-weight-bold;\n  }\n\n  @if $size {\n    @include govuk-typography-responsive($size, $override-line-height: $line-height);\n  }\n}\n","@import url('https://fonts.googleapis.com/css2?family=PT+Sans:wght@400;700&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\n\n// change font to PT Sans\n$govuk-font-family: 'PT Sans', \"sans-serif\";\n\n// GovUK frontend\n@import \"node_modules/govuk-frontend/govuk/base\";\n\n@import \"node_modules/govuk-frontend/govuk/core/global-styles\";\n@import \"node_modules/govuk-frontend/govuk/core/template\";\n@import \"node_modules/govuk-frontend/govuk/objects/grid\";\n@import \"node_modules/govuk-frontend/govuk/objects/main-wrapper\";\n@import \"node_modules/govuk-frontend/govuk/objects/width-container\";\n@import \"node_modules/govuk-frontend/govuk/components/footer/index\";\n@import \"node_modules/govuk-frontend/govuk/components/header/index\";\n@import \"node_modules/govuk-frontend/govuk/components/skip-link/index\";\n@import \"node_modules/govuk-frontend/govuk/utilities/all\";\n@import \"node_modules/govuk-frontend/govuk/overrides/all\";\n\n\n@import \"dt-colours\";\n@import \"loader\";\n@import \"charts\";\n\n$base_root : '/technology-diversity-statistics/assets/';\n\n.govuk-header__container {\n    margin-bottom: 0;\n    border-bottom: none;\n}\n.govuk-footer__copyright-logo {\n    background-image: url(#{$base_root}images/govuk-crest.png);\n}\n\n#global-header .header-wrapper .header-global .header-content {\n    color: #fff;\n    font-size: 30px;\n    font-weight: bold;\n    margin: 0;\n    width: 75%;\n}\n\n.column {\n    float: left;\n    width: 50%;\n}\n\n@media screen and (max-width: 960px) {\n    .column {\n        float: none;\n        width: 100%;\n    }\n}\n\n","// mq() v4.0.2\n// sass-mq/sass-mq\n\n@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","////\n/// @group helpers/links\n////\n\n/// Common link mixin\n///\n/// Provides the typography and focus state, regardless of link style.\n///\n/// @access public\n\n@mixin govuk-link-common {\n  @include govuk-typography-common;\n\n  &:focus {\n    @include govuk-focused-text;\n  }\n}\n\n/// Default link style mixin\n///\n/// Provides the default unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-default;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-default {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-visited-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Error link style mixin\n///\n/// Provides the error unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-error;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-error {\n  &:link,\n  &:visited {\n    color: $govuk-error-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-error-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-error-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Success link style mixin\n///\n/// Provides the success unvisited, visited, hover and active states for links.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-success;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-success {\n  &:link,\n  &:visited {\n    color: $govuk-success-colour;\n  }\n\n  &:hover {\n    color: scale-color($govuk-success-colour, $lightness: -30%);\n  }\n\n  &:active {\n    color: $govuk-success-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector\n  // designed to make unvisited link  s a slightly darker blue when focussed, so\n  // we need to override the text colour for that combination of selectors so\n  // so that unvisited links styled as buttons do not end up with dark blue\n  // text when focussed.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      color: $govuk-focus-text-colour;\n    }\n  }\n}\n\n/// Muted style link mixin\n///\n/// Used for secondary links on a page - the link will appear in muted colours\n/// regardless of visited state.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-muted;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-muted {\n  &:link,\n  &:visited,\n  &:hover,\n  &:active {\n    color: $govuk-secondary-text-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// Text style link mixin\n///\n/// Overrides the colour of links to match the text colour. Generally used by\n/// navigation components, such as breadcrumbs or the back link.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-text;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-text {\n  // Override link colour to use text colour\n  &:link,\n  &:visited,\n  &:hover,\n  &:active,\n  &:focus {\n    @include govuk-text-colour;\n  }\n\n  // alphagov/govuk_template includes a specific a:link:focus selector designed\n  // to make unvisited links a slightly darker blue when focussed, so we need to\n  // override the text colour for that combination of selectors.\n  @include govuk-compatibility(govuk_template) {\n    &:link:focus {\n      @include govuk-text-colour;\n    }\n  }\n}\n\n/// No visited state link mixin\n///\n/// Used in cases where it is not helpful to distinguish between visited and\n/// non-visited links.\n///\n/// For example, navigation links to pages with dynamic content like admin\n/// dashboards. The content on the page is changing all the time, so the fact\n/// that you’ve visited it before is not important.\n///\n/// If you use this mixin in a component you must also include the\n/// govuk-link-common mixin in order to get the focus state.\n///\n/// @example scss\n///   .govuk-component__link {\n///     @include govuk-link-common;\n///     @include govuk-link-style-no-visited-state;\n///   }\n///\n/// @access public\n\n@mixin govuk-link-style-no-visited-state {\n  &:link {\n    color: $govuk-link-colour;\n  }\n\n  &:visited {\n    color: $govuk-link-colour;\n  }\n\n  &:hover {\n    color: $govuk-link-hover-colour;\n  }\n\n  &:active {\n    color: $govuk-link-active-colour;\n  }\n\n  // When focussed, the text colour needs to be darker to ensure that colour\n  // contrast is still acceptable\n  &:focus {\n    color: $govuk-focus-text-colour;\n  }\n}\n\n/// Print friendly link mixin\n///\n/// When printing, append the the destination URL to the link text, as long\n/// as the URL starts with either `/`, `http://` or `https://`.\n///\n/// @access public\n\n@mixin govuk-link-print-friendly {\n  @include govuk-media-query($media-type: print) {\n    &[href^=\"/\"],\n    &[href^=\"http://\"],\n    &[href^=\"https://\"] {\n      &:after {\n        content: \" (\" attr(href) \")\";\n        font-size: 90%;\n\n        // Because the URLs may be very long, ensure that they may be broken\n        // at arbitrary points if there are no otherwise acceptable break\n        // points in the line\n        word-wrap: break-word;\n      }\n    }\n  }\n}\n","////\n/// @group helpers/accessibility\n////\n\n/// Focused text\n///\n/// Provides an outline to clearly indicate when the target element is focused.\n/// Used for interactive text-based elements.\n///\n/// @access public\n\n@mixin govuk-focused-text {\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n\n  // Since Internet Explorer 8 does not support box-shadow, we want to force the\n  // user-agent outlines\n  @include govuk-not-ie8 {\n    outline: $govuk-focus-width solid transparent;\n  }\n  color: $govuk-focus-text-colour;\n  background-color: $govuk-focus-colour;\n  box-shadow: 0 -2px $govuk-focus-colour, 0 4px $govuk-focus-text-colour;\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n}\n","////\n/// @group settings/colours\n////\n\n@import \"../helpers/colour\";\n\n// =========================================================\n// Generic\n// =========================================================\n\n/// Brand colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-brand-colour: govuk-colour(\"blue\") !default;\n\n/// Text colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-text-colour: govuk-colour(\"black\") !default;\n\n/// Canvas background colour\n///\n/// Used by the footer component and template to give the illusion of a long\n/// footer.\n///\n/// @type Colour\n/// @access public\n\n$govuk-canvas-background-colour: govuk-colour(\"light-grey\", $legacy: \"grey-3\") !default;\n\n/// Body background colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-body-background-colour: govuk-colour(\"white\") !default;\n\n/// Text colour for print media\n///\n/// Use 'true black' to avoid printers using colour ink to print body text\n///\n/// @type Colour\n/// @access public\n\n$govuk-print-text-colour: #000000 !default;\n\n/// Secondary text colour\n///\n/// Used in for example 'muted' text and help text.\n///\n/// @type Colour\n/// @access public\n\n$govuk-secondary-text-colour: govuk-colour(\"dark-grey\", $legacy: \"grey-1\") !default;\n\n/// Focus colour\n///\n/// Used for outline (and background, where appropriate) when interactive\n/// elements (links, form controls) have keyboard focus.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-colour: govuk-colour(\"yellow\") !default;\n\n/// Focused text colour\n///\n/// Ensure that the contrast between the text and background colour passes\n/// WCAG Level AA contrast requirements.\n///\n/// @type Colour\n/// @access public\n\n$govuk-focus-text-colour: govuk-colour(\"black\") !default;\n\n/// Error colour\n///\n/// Used to highlight error messages and form controls in an error state\n///\n/// @type Colour\n/// @access public\n\n$govuk-error-colour: govuk-colour(\"red\") !default;\n\n/// Success colour\n///\n/// Used to highlight success messages and banners\n///\n/// @type Colour\n/// @access public\n\n$govuk-success-colour: govuk-colour(\"green\") !default;\n\n/// Border colour\n///\n/// Used in for example borders, separators, rules and keylines.\n///\n/// @type Colour\n/// @access public\n\n$govuk-border-colour: govuk-colour(\"mid-grey\", $legacy: \"grey-2\");\n\n/// Input border colour\n///\n/// Used for form inputs and controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-input-border-colour: govuk-colour(\"black\") !default;\n\n/// Input hover colour\n///\n/// Used for hover states on form controls\n///\n/// @type Colour\n/// @access public\n\n$govuk-hover-colour: govuk-colour(\"mid-grey\", $legacy: \"grey-3\");\n\n// =============================================================================\n// Links\n// =============================================================================\n\n/// Link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-colour: govuk-colour(\"blue\") !default;\n\n/// Visited link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-visited-colour: govuk-colour(\"purple\", $legacy: #4c2c92) !default;\n\n/// Link hover colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-hover-colour: govuk-colour(\"dark-blue\", $legacy: \"light-blue\") !default;\n\n/// Active link colour\n///\n/// @type Colour\n/// @access public\n\n$govuk-link-active-colour: govuk-colour(\"black\", $legacy: \"light-blue\") !default;\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n@include govuk-exports(\"govuk/core/typography\") {\n\n  // Headings\n\n  %govuk-heading-xl {\n    @include govuk-text-colour;\n    @include govuk-font($size: 48, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(8, \"bottom\");\n  }\n\n  .govuk-heading-xl {\n    @extend %govuk-heading-xl;\n  }\n\n  %govuk-heading-l {\n    @include govuk-text-colour;\n    @include govuk-font($size: 36, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(6, \"bottom\");\n  }\n\n  .govuk-heading-l {\n    @extend %govuk-heading-l;\n  }\n\n  %govuk-heading-m {\n    @include govuk-text-colour;\n    @include govuk-font($size: 24, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-heading-m {\n    @extend %govuk-heading-m;\n  }\n\n  %govuk-heading-s {\n    @include govuk-text-colour;\n    @include govuk-font($size: 19, $weight: bold);\n\n    display: block;\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-heading-s {\n    @extend %govuk-heading-s;\n  }\n\n  // Captions to be used inside headings\n\n  .govuk-caption-xl {\n    @include govuk-font($size: 27);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  .govuk-caption-l {\n    @include govuk-font($size: 24);\n\n    display: block;\n\n    margin-bottom: govuk-spacing(1);\n    color: $govuk-secondary-text-colour;\n\n    @include govuk-media-query($from: tablet) {\n      margin-bottom: 0;\n    }\n  }\n\n  .govuk-caption-m {\n    @include govuk-font($size: 19);\n\n    display: block;\n\n    color: $govuk-secondary-text-colour;\n  }\n\n  // Body (paragraphs)\n\n  %govuk-body-l {\n    @include govuk-text-colour;\n    @include govuk-font($size: 24);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(6, \"bottom\");\n  }\n\n  .govuk-body-l {\n    @extend %govuk-body-l;\n  }\n\n  %govuk-body-m {\n    @include govuk-text-colour;\n    @include govuk-font($size: 19);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-body-m {\n    @extend %govuk-body-m;\n  }\n\n  %govuk-body-s {\n    @include govuk-text-colour;\n    @include govuk-font($size: 16);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-body-s {\n    @extend %govuk-body-s;\n  }\n\n  %govuk-body-xs {\n    @include govuk-text-colour;\n    @include govuk-font($size: 14);\n\n    margin-top: 0;\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-body-xs {\n    @extend %govuk-body-xs;\n  }\n\n  // Usage aliases\n\n  // Using extend to alias means we also inherit any contextual adjustments that\n  // refer to the 'original' class name\n\n  .govuk-body-lead {\n    @extend %govuk-body-l;\n  }\n\n  .govuk-body {\n    @extend %govuk-body-m;\n  }\n\n  // Contextual adjustments\n  // Add top padding to headings that appear directly after paragraphs.\n\n  %govuk-body-l  + %govuk-heading-l {\n    padding-top: govuk-spacing(1);\n\n    @include govuk-media-query($from: tablet) {\n      padding-top: govuk-spacing(2);\n    }\n  }\n\n  %govuk-body-m  + %govuk-heading-l,\n  %govuk-body-s  + %govuk-heading-l,\n  %govuk-list + %govuk-heading-l {\n    @include govuk-responsive-padding(4, \"top\");\n  }\n\n  %govuk-body-m + %govuk-heading-m,\n  %govuk-body-s + %govuk-heading-m,\n  %govuk-list + %govuk-heading-m,\n  %govuk-body-m + %govuk-heading-s,\n  %govuk-body-s + %govuk-heading-s,\n  %govuk-list + %govuk-heading-s {\n    padding-top: govuk-spacing(1);\n\n    @include govuk-media-query($from: tablet) {\n      padding-top: govuk-spacing(2);\n    }\n  }\n}\n","////\n/// @group helpers/spacing\n////\n\n// stylelint-disable indentation\n\n/// Single point spacing\n///\n/// Returns measurement corresponding to the spacing point requested.\n///\n/// @param {Number} $spacing-point - Point on the spacing scale (set in `settings/_spacing.sccs`)\n///\n/// @returns {String} Spacing Measurement eg. 10px\n///\n/// @example scss\n///   .element {\n///     padding: govuk-spacing(5);\n///     top: govuk-spacing(2) !important; // if `!important` is required\n///   }\n/// @access public\n\n@function govuk-spacing($spacing-point) {\n\n  $actual-input-type: type-of($spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \"\n    + \"#{$actual-input-type}.\";\n  }\n\n  @if not map-has-key($govuk-spacing-points, $spacing-point) {\n    @error \"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  @return map-get($govuk-spacing-points, $spacing-point);\n}\n\n/// Responsive spacing\n///\n/// Adds responsive spacing (either padding or margin, depending on `$property`)\n/// by fetching a 'spacing map' from the responsive spacing scale, which defines\n/// different spacing values at different breakpoints.\n///\n/// To generate responsive spacing, use 'govuk-responsive-margin' or\n/// 'govuk-responsive-padding' mixins\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $property - Property to add spacing to (e.g. 'margin')\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @access private\n\n@mixin _govuk-responsive-spacing($responsive-spacing-point, $property, $direction: \"all\", $important: false, $adjustment: false) {\n\n  $actual-input-type: type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map-has-key($govuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n    + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  // Make sure that the return value from `_settings/spacing.scss` is a map.\n  $scale-map: map-get($govuk-spacing-responsive-scale, $responsive-spacing-point);\n  $actual-map-type: type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n    + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  // Loop through each breakpoint in the map\n  @each $breakpoint, $breakpoint-value in $scale-map {\n\n    @if ($adjustment) {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    // The 'null' breakpoint is for mobile.\n    @if $breakpoint == null {\n\n      @if $direction == all {\n        #{$property}: $breakpoint-value if($important, !important, null);\n      } @else {\n        #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n      }\n    } @else {\n      @include govuk-media-query($from: $breakpoint) {\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      }\n    }\n  }\n}\n\n/// Responsive margin\n///\n/// Adds responsive margin by fetching a 'spacing map' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n/// scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing by\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-margin(6, \"left\", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-margin($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\n}\n\n/// Responsive padding\n///\n/// Adds responsive padding by fetching a 'spacing map' from the responsive\n/// spacing scale, which defines different spacing values at different\n/// breakpoints. Wrapper for the `_govuk-responsive-spacing` mixin.\n///\n/// @see {mixin} _govuk-responsive-spacing\n///\n/// @param {Number} $responsive-spacing-point - Point on the responsive spacing\n///   scale, corresponds to a map of breakpoints and spacing values\n/// @param {String} $direction [all] - Direction to add spacing to\n///   (`top`, `right`, `bottom`, `left`, `all`)\n/// @param {Boolean} $important [false] - Whether to mark as `!important`\n/// @param {Number} $adjustment [false] - Offset to adjust spacing\n///\n/// @example scss\n///   .element {\n///      @include govuk-responsive-padding(6, \"left\", $adjustment: 1px);\n///   }\n///\n/// @access public\n\n@mixin govuk-responsive-padding($responsive-spacing-point, $direction: \"all\", $important: false, $adjustment: false) {\n  @include _govuk-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\n}\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the core layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n@include govuk-exports(\"govuk/core/template\") {\n\n  // Applied to the <html> element\n  .govuk-template {\n    // Set the overall page background colour to the same colour as used by the\n    // footer to give the illusion of a long footer.\n    background-color: $govuk-canvas-background-colour;\n\n    // Prevent automatic text sizing, as we already cater for small devices and\n    // would like the browser to stay on 100% text zoom by default.\n    -webkit-text-size-adjust: 100%;\n       -moz-text-size-adjust: 100%;\n        -ms-text-size-adjust: 100%;\n            text-size-adjust: 100%;\n\n    // Force the scrollbar to always display in IE, to prevent horizontal page\n    // jumps as content height changes (e.g. autocomplete results open).\n    @include govuk-media-query($media-type: screen) {\n      overflow-y: scroll;\n    }\n  }\n\n  // Applied to the <body> element\n  .govuk-template__body {\n    // The default margins set by user-agents are not required since we have our\n    // own containers.\n    margin: 0;\n    // Set the overall body of the page back to the typical background colour.\n    background-color: $govuk-body-background-colour;\n  }\n}\n","@import \"../base\";\n\n@include govuk-exports(\"govuk/objects/grid\") {\n  .govuk-grid-row {\n    @include govuk-clearfix;\n    margin-right: - ($govuk-gutter-half);\n    margin-left: - ($govuk-gutter-half);\n  }\n\n  @each $width in map-keys($govuk-grid-widths) {\n    .govuk-grid-column-#{$width} {\n      @include govuk-grid-column($width);\n    }\n  }\n\n  // These *must* be defined in a separate loop as they have the same\n  // specificity as the non-breakpoint specific classes, so need to appear after\n  // them in the outputted CSS\n  @each $width in map-keys($govuk-grid-widths) {\n    .govuk-grid-column-#{$width}-from-desktop {\n      @include govuk-grid-column($width, $at: desktop);\n    }\n  }\n}\n","////\n/// @group helpers/layout\n////\n\n/// Clear floated content within a container using a pseudo element\n///\n/// @access public\n\n@mixin govuk-clearfix {\n  &:after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n}\n","////\n/// @group helpers/layout\n////\n\n/// Grid width percentage\n///\n/// @param {String} $key - Name of grid width (e.g. two-thirds)\n/// @return {Number} Percentage width\n/// @throw if `$key` is not a valid grid width\n/// @access public\n\n@function govuk-grid-width($key) {\n  @if map-has-key($govuk-grid-widths, $key) {\n    @return map-get($govuk-grid-widths, $key);\n  }\n\n  @error \"Unknown grid width `#{$key}`\";\n}\n\n/// Generate grid column styles\n///\n/// Creates a grid column with standard gutter between the columns.\n///\n/// Grid widths are defined in the `$govuk-grid-widths` map.\n///\n/// By default the column width changes from 100% to specified width at the\n/// 'tablet' breakpoint, but other breakpoints can be specified using the `$at`\n/// parameter.\n///\n/// @param {String} $width [full] name of a grid width from $govuk-grid-widths\n/// @param {String} $float [left] left | right\n/// @param {String} $at [tablet] - mobile | tablet | desktop | any custom breakpoint\n///\n/// @example scss - Default\n///   .govuk-grid-column-two-thirds {\n///     @include govuk-grid-column(two-thirds)\n///   }\n///\n/// @example scss - Customising the breakpoint where width percentage is applied\n///   .govuk-grid-column-one-half-at-desktop {\n///     @include govuk-grid-column(one-half, $at: desktop);\n///   }\n///\n/// @example scss - Customising the float direction\n///   .govuk-grid-column-one-half-right {\n///     @include govuk-grid-column(two-thirds, $float: right);\n///   }\n///\n/// @access public\n\n@mixin govuk-grid-column($width: full, $float: left, $at: tablet) {\n  box-sizing: border-box;\n  @if $at != desktop {\n    width: 100%;\n  }\n  padding: 0 $govuk-gutter-half;\n  @include govuk-media-query($from: $at) {\n    width: govuk-grid-width($width);\n    float: $float;\n  }\n}\n","@import \"../base\";\n\n////\n/// @group objects/layout\n////\n\n// Example usage with Breadcrumbs, phase banners, back links:\n// <div class=\"govuk-width-container\">\n//   <!-- Breadcrumbs, phase banners, back links are placed in here. -->\n//   <div class=\"govuk-main-wrapper\">\n//       <!-- Wrapper for the main content of your page which applies padding\n//            to the top / bottom -->\n//   </div>\n// </div>\n//\n// Example usage without Breadcrumbs, phase banners, back links:\n// <div class=\"govuk-width-container\">\n//   <div class=\"govuk-main-wrapper govuk-main-wrapper--l\">\n//       <!-- Wrapper for the main content of your page which applies padding\n//            to the top / bottom -->\n//   </div>\n// </div>\n\n/// @deprecated Replace this mixin with more direct references to the [spacing\n/// mixins](https://design-system.service.gov.uk/styles/spacing/#spacing-on-custom-components).\n@mixin govuk-main-wrapper {\n  // In IE11 the `main` element can be used, but is not recognized  –\n  // meaning it's not defined in IE's default style sheet,\n  // so it uses CSS initial value, which is inline.\n  display: block;\n  padding-top: govuk-spacing(4);\n  padding-bottom: govuk-spacing(4);\n\n  @include govuk-media-query($from: tablet) {\n    // This spacing is manually adjusted to replicate the margin of\n    // govuk-heading-xl (50px) minus the spacing of back link and\n    // breadcrumbs (10px)\n    padding-top: govuk-spacing(7);\n    padding-bottom: govuk-spacing(7);\n  }\n}\n\n/// Use govuk-main-wrapper--l when you page does not have Breadcrumbs, phase\n/// banners or back links.\n///\n/// @deprecated Replace this mixin with more direct references to the [spacing\n/// mixins](https://design-system.service.gov.uk/styles/spacing/#spacing-on-custom-components).\n@mixin govuk-main-wrapper--l {\n  @include govuk-responsive-padding(8, \"top\");\n}\n\n@include govuk-exports(\"govuk/objects/main-wrapper\") {\n  .govuk-main-wrapper {\n    @include govuk-main-wrapper;\n  }\n\n  // Using the `.govuk-main-wrapper--auto-spacing` modifier should apply the\n  // correct spacing depending on whether there are any elements\n  // (such the back link, breadcrumbs or phase banner components) before the\n  // `.govuk-main-wrapper` in the `govuk-width-container`.\n  //\n  // If you need to control the spacing manually, use the\n  // `govuk-main-wrapper--l` modifier instead.\n  .govuk-main-wrapper--auto-spacing:first-child,\n  .govuk-main-wrapper--l {\n    @include govuk-main-wrapper--l;\n  }\n}\n","@import \"../base\";\n\n////\n/// @group objects/layout\n////\n\n/// Width container mixin\n///\n/// Used to create page width and custom width container classes.\n///\n/// @param {String} $width [$govuk-page-width] - Width in pixels\n///\n/// @example scss - Creating a 1200px wide container class\n///  .app-width-container--wide {\n///    @include govuk-width-container(1200px);\n///  }\n///\n/// @access public\n\n@mixin govuk-width-container($width: $govuk-page-width) {\n\n  // By default, limit the width of the container to the page width\n  max-width: $width;\n\n  // On mobile, add half width gutters\n  margin-right: $govuk-gutter-half;\n  margin-left: $govuk-gutter-half;\n\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\n  @supports (margin: unquote(\"max(calc(0px))\")) {\n    $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\n    $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\n\n    // Use max() to pick largest margin, default or with safe area\n    // Escaped due to Sass max() vs. CSS native max()\n    margin-right: unquote(\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-right})\");\n    margin-left: unquote(\"max(#{$govuk-gutter-half}, #{$gutter-safe-area-left})\");\n  }\n\n  // On tablet, add full width gutters\n  @include govuk-media-query($from: tablet) {\n    margin-right: $govuk-gutter;\n    margin-left: $govuk-gutter;\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (margin: unquote(\"max(calc(0px))\")) {\n      $gutter-safe-area-right: calc(#{$govuk-gutter-half} + env(safe-area-inset-right));\n      $gutter-safe-area-left: calc(#{$govuk-gutter-half} + env(safe-area-inset-left));\n\n      // Use max() to pick largest margin, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      margin-right: unquote(\"max(#{$govuk-gutter}, #{$gutter-safe-area-right})\");\n      margin-left: unquote(\"max(#{$govuk-gutter}, #{$gutter-safe-area-left})\");\n    }\n  }\n\n  // As soon as the viewport is greater than the width of the page plus the\n  // gutters, just centre the content instead of adding gutters.\n  @include govuk-media-query($and: \"(min-width: #{($width + $govuk-gutter * 2)})\") {\n    margin-right: auto;\n    margin-left: auto;\n\n    // Since a safe area may have previously been set above,\n    // we need to duplicate this margin that centers the page.\n    @supports (margin: unquote(\"max(calc(0px))\")) {\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n\n  @include govuk-if-ie8 {\n    width: $width;\n    // Since media queries are not supported in IE8,\n    // we need to duplicate this margin that centers the page.\n    margin-right: auto;\n    margin-left: auto;\n  }\n}\n\n@include govuk-exports(\"govuk/objects/width-container\") {\n  .govuk-width-container {\n    @include govuk-width-container;\n  }\n}\n","////\n/// @group settings/measurements\n////\n\n// =========================================================\n// Page layout\n// =========================================================\n\n/// Width of main container\n///\n/// @type Number\n/// @access public\n\n$govuk-page-width: 960px !default;\n\n/// Map of grid column widths\n///\n/// @type Map\n/// @access public\n\n$govuk-grid-widths: (\n  one-quarter: 25%,\n  one-third: 33.3333%,\n  one-half: 50%,\n  two-thirds: 66.6666%,\n  three-quarters: 75%,\n  full: 100%\n) !default;\n\n/// Width of gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter: 30px !default;\n\n/// Width of half the gutter between grid columns\n///\n/// @type Number\n/// @access public\n\n$govuk-gutter-half: $govuk-gutter / 2;\n\n// =========================================================\n// Borders\n// =========================================================\n\n/// Standard border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width: 5px !default;\n\n/// Wide border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-wide: 10px !default;\n\n/// Narrow border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-narrow: 4px !default;\n\n/// Form control border width\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-element: 2px !default;\n\n/// Form control border width when in error state\n///\n/// @type Number\n/// @access public\n/// @deprecated Use $govuk-border-width-form-element instead. There should be no\n///   difference in thickness for inputs in the error state, in order to\n///   maintain a distinct focus state.\n\n$govuk-border-width-form-element-error: 2px !default;\n\n/// Form group border width when in error state\n///\n/// @type Number\n/// @access public\n\n$govuk-border-width-form-group-error: $govuk-border-width !default;\n\n/// Border width of focus outline\n///\n/// @type Number\n/// @access public\n\n$govuk-focus-width: 3px !default;\n\n/// Hover width for form controls with a hover state\n///\n/// @type Number\n/// @access public\n\n$govuk-hover-width: 10px !default;\n","@include govuk-exports(\"govuk/component/footer\") {\n\n  $govuk-footer-background: $govuk-canvas-background-colour;\n  $govuk-footer-border: $govuk-border-colour;\n  // This variable can be removed entirely once the legacy palette goes away,\n  // as it'll just be the same as $govuk-footer-border.\n  $govuk-footer-border-top: $govuk-border-colour;\n  $govuk-footer-text: $govuk-text-colour;\n  $govuk-footer-link: $govuk-footer-text;\n  $govuk-footer-link-hover: false;\n\n  @if ($govuk-use-legacy-palette) {\n    $govuk-footer-border-top: #a1acb2;\n    $govuk-footer-border: govuk-colour(\"grey-2\");\n    $govuk-footer-text: #454a4c;\n    $govuk-footer-link: $govuk-footer-text;\n\n    // Only used with the legacy palette\n    $govuk-footer-link-hover: #171819;\n  }\n\n  // Based on the govuk-crest-2x.png image dimensions.\n  $govuk-footer-crest-image-width-2x: 250px;\n  $govuk-footer-crest-image-height-2x: 204px;\n  // Half the 2x image so that it fits the regular 1x size.\n  $govuk-footer-crest-image-width: ($govuk-footer-crest-image-width-2x / 2);\n  $govuk-footer-crest-image-height: ($govuk-footer-crest-image-height-2x / 2);\n\n  .govuk-footer {\n    @include govuk-font($size: 16);\n    @include govuk-responsive-padding(7, \"top\");\n    @include govuk-responsive-padding(5, \"bottom\");\n\n    border-top: 1px solid $govuk-footer-border-top;\n    color: $govuk-footer-text;\n    background: $govuk-footer-background;\n  }\n\n  .govuk-footer__link {\n    @if ($govuk-use-legacy-palette) {\n      &:link,\n      &:visited {\n        color: $govuk-footer-link;\n      }\n\n      &:hover,\n      &:active {\n        color: $govuk-footer-link-hover;\n      }\n    } @else {\n      &:link,\n      &:visited,\n      &:hover,\n      &:active {\n        color: $govuk-footer-link;\n      }\n    }\n\n    &:focus {\n      @include govuk-focused-text;\n    }\n\n    // alphagov/govuk_template includes a specific a:link:focus selector\n    // designed to make unvisited links a slightly darker blue when focussed, so\n    // we need to override the text colour for that combination of selectors.\n    @include govuk-compatibility(govuk_template) {\n      &:link:focus {\n        @include govuk-text-colour;\n      }\n    }\n  }\n\n  .govuk-footer__section-break {\n    margin: 0; // Reset `<hr>` default margins\n    @include govuk-responsive-margin(8, \"bottom\");\n    border: 0; // Reset `<hr>` default borders\n    border-bottom: 1px solid $govuk-footer-border;\n  }\n\n  .govuk-footer__meta {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; // Support: Flexbox\n    margin-right: -$govuk-gutter-half;\n    margin-left: -$govuk-gutter-half;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap; // Support: Flexbox\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end; // Support: Flexbox\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center; // Support: Flexbox\n  }\n\n  .govuk-footer__meta-item {\n    margin-right: $govuk-gutter-half;\n    margin-bottom: govuk-spacing(5);\n    margin-left: $govuk-gutter-half;\n  }\n\n  .govuk-footer__meta-item--grow {\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1; // Support: Flexbox\n    @include govuk-media-query ($until: tablet) {\n      -ms-flex-preferred-size: 320px;\n          flex-basis: 320px; // Support: Flexbox\n    }\n  }\n\n  .govuk-footer__licence-logo {\n    display: inline-block;\n    margin-right: govuk-spacing(2);\n    @include govuk-media-query ($until: desktop) {\n      margin-bottom: govuk-spacing(3);\n    }\n    vertical-align: top;\n  }\n\n  .govuk-footer__licence-description {\n    display: inline-block;\n  }\n\n  .govuk-footer__copyright-logo {\n    display: inline-block;\n    min-width: $govuk-footer-crest-image-width;\n    padding-top: ($govuk-footer-crest-image-height + govuk-spacing(2));\n    background-image: govuk-image-url(\"govuk-crest.png\");\n    @include govuk-device-pixel-ratio {\n      background-image: govuk-image-url(\"govuk-crest-2x.png\");\n    }\n    background-repeat: no-repeat;\n    background-position: 50% 0%;\n    background-size: $govuk-footer-crest-image-width $govuk-footer-crest-image-height;\n    text-align: center;\n    text-decoration: none;\n    white-space: nowrap;\n  }\n\n  .govuk-footer__inline-list {\n    margin-top: 0;\n    margin-bottom: govuk-spacing(3);\n    padding: 0;\n  }\n\n  .govuk-footer__meta-custom {\n    margin-bottom: govuk-spacing(4);\n  }\n\n  .govuk-footer__inline-list-item {\n    display: inline-block;\n    margin-right: govuk-spacing(3);\n    margin-bottom: govuk-spacing(1);\n  }\n\n  .govuk-footer__heading {\n    @include govuk-responsive-margin(7, \"bottom\");\n    padding-bottom: govuk-spacing(4);\n    @include govuk-media-query ($until: tablet) {\n      padding-bottom: govuk-spacing(2);\n    }\n    border-bottom: 1px solid $govuk-footer-border;\n  }\n\n  .govuk-footer__navigation {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex; // Support: Flexbox\n    margin-right: -$govuk-gutter-half;\n    margin-left: -$govuk-gutter-half;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap; // Support: Flexbox\n  }\n\n  .govuk-footer__section {\n    display: inline-block;\n    margin-right: $govuk-gutter-half;\n    margin-bottom: $govuk-gutter;\n    margin-left: $govuk-gutter-half;\n    vertical-align: top;\n    // Ensure columns take up equal width (typically one-half:one-half)\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1; // Support: Flexbox\n    -ms-flex-negative: 1;\n        flex-shrink: 1; // Support: Flexbox\n    @include govuk-media-query ($until: desktop) {\n      // Make sure columns do not drop below 200px in width\n      // Will typically result in wrapping, and end up in a single column on smaller screens.\n      -ms-flex-preferred-size: 200px;\n          flex-basis: 200px; // Support: Flexbox\n    }\n  }\n\n  // If there are only two sections, set the layout to be two-third:one-third on desktop\n  @include govuk-media-query ($from: desktop) {\n    // We match the first section with `:first-child`.\n    // To ensure the section is one of two, we can count backwards using `:nth-last-child(2)`.\n    .govuk-footer__section:first-child:nth-last-child(2) {\n      -webkit-box-flex: 2;\n          -ms-flex-positive: 2;\n              flex-grow: 2; // Support: Flexbox\n    }\n  }\n\n  .govuk-footer__list {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    -webkit-column-gap: $govuk-gutter;\n            column-gap: $govuk-gutter; // Support: Columns\n  }\n\n  @include govuk-media-query ($from: desktop) {\n    .govuk-footer__list--columns-2 {\n      -webkit-column-count: 2;\n              column-count: 2; // Support: Columns\n    }\n\n    .govuk-footer__list--columns-3 {\n      -webkit-column-count: 3;\n              column-count: 3; // Support: Columns\n    }\n  }\n\n  .govuk-footer__list-item {\n    @include govuk-responsive-margin(4, \"bottom\");\n  }\n\n  .govuk-footer__list-item:last-child {\n    margin-bottom: 0;\n  }\n}\n","////\n/// @group helpers\n////\n\n/// Media query for retina images (device-pixel-ratio)\n///\n/// @param {Number} $ratio [2] - Device pixel ratio\n/// @content Passed content will be outputted within the media query\n///\n/// @example scss - Providing a @2x image for screens that support it\n///   background-image: govuk-image-url(\"my-image.png\");\n///\n///   @include govuk-device-pixel-ratio {\n///     background-image: govuk-image-url(\"my-image-2x.png\");\n///   }\n///\n/// @example scss - Using a custom ratio\n///   background-image: govuk-image-url(\"my-image.png\");\n///\n///   @include govuk-device-pixel-ratio {\n///     background-image: govuk-image-url(\"my-image-2x.png\");\n///   }\n///\n///   @include govuk-device-pixel-ratio(3) {\n///     background-image: govuk-image-url(\"my-image-3x.png\");\n///   }\n///\n/// @access public\n\n@mixin govuk-device-pixel-ratio($ratio: 2) {\n  // stylelint-disable indentation\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n    only screen and (min-resolution: #{($ratio * 96)}dpi),\n    only screen and (min-resolution: #{$ratio}dppx) {\n      @content;\n    }\n}\n","@include govuk-exports(\"govuk/component/header\") {\n\n  $govuk-header-background: govuk-colour(\"black\");\n  $govuk-header-border-color: $govuk-brand-colour;\n  $govuk-header-border-width: govuk-spacing(2);\n  $govuk-header-text: govuk-colour(\"white\");\n  $govuk-header-link: govuk-colour(\"white\");\n  $govuk-header-link-hover: govuk-colour(\"white\");\n  $govuk-header-link-active: #1d8feb;\n  $govuk-header-nav-item-border-color: #2e3133;\n\n  .govuk-header {\n    @include govuk-font($size: 16);\n\n    border-bottom: govuk-spacing(2) solid govuk-colour(\"white\");\n    color: $govuk-header-text;\n    background: $govuk-header-background;\n  }\n\n  .govuk-header__container--full-width {\n    padding: 0 govuk-spacing(3);\n    border-color: $govuk-header-border-color;\n\n    .govuk-header__menu-button {\n      right: govuk-spacing(3);\n    }\n  }\n\n  .govuk-header__container {\n    @include govuk-clearfix;\n    position: relative;\n    margin-bottom: -$govuk-header-border-width;\n    padding-top: govuk-spacing(2);\n    border-bottom: $govuk-header-border-width solid $govuk-header-border-color;\n  }\n\n  .govuk-header__logotype {\n    display: inline-block;\n    margin-right: govuk-spacing(1);\n  }\n\n  .govuk-header__logotype-crown {\n    position: relative;\n    top: -1px;\n    margin-right: 1px;\n    fill: currentColor;\n    vertical-align: top;\n  }\n\n  .govuk-header__logotype-crown-fallback-image {\n    width: 36px;\n    height: 32px;\n    border: 0;\n    vertical-align: middle;\n  }\n\n  .govuk-header__product-name {\n    @include govuk-font($size: 24, $line-height: 1);\n    display: inline-table;\n    padding-right: govuk-spacing(2);\n  }\n\n  .govuk-header__link {\n    text-decoration: none;\n\n    &:link,\n    &:visited {\n      color: $govuk-header-link;\n    }\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    &:focus {\n      @include govuk-focused-text;\n    }\n\n    // alphagov/govuk_template includes a specific a:link:focus selector\n    // designed to make unvisited links a slightly darker blue when focussed, so\n    // we need to override the text colour for that combination of selectors.\n    @include govuk-compatibility(govuk_template) {\n      &:link:focus {\n        @include govuk-text-colour;\n      }\n    }\n  }\n\n  .govuk-header__link--homepage {\n    // Font size needs to be set on the link so that the box sizing is correct\n    // in Firefox\n    @include govuk-font($size: false, $weight: bold);\n\n    display: inline-block;\n    font-size: 30px; // We don't have a mixin that produces 30px font size\n    line-height: 1;\n\n    &:link,\n    &:visited {\n      text-decoration: none;\n    }\n\n    &:hover,\n    &:active {\n      // Negate the added border\n      margin-bottom: -1px;\n      // Omitting colour will use default value of currentColor – if we\n      // specified currentColor explicitly IE8 would ignore this rule.\n      border-bottom: 1px solid;\n    }\n\n    // Remove any borders that show when focused and hovered.\n    &:focus {\n      margin-bottom: 0;\n      border-bottom: 0;\n    }\n  }\n\n  .govuk-header__link--service-name {\n    display: inline-block;\n    margin-bottom: govuk-spacing(2);\n    @include govuk-font($size: 24, $weight: bold);\n  }\n\n  .govuk-header__logo,\n  .govuk-header__content {\n    box-sizing: border-box;\n  }\n\n  .govuk-header__logo {\n    @include govuk-responsive-margin(2, \"bottom\");\n    padding-right: govuk-spacing(8);\n\n    @include govuk-media-query ($from: desktop) {\n      width: 33.33%;\n      padding-right: $govuk-gutter-half;\n      float: left;\n      vertical-align: top;\n    }\n  }\n\n  .govuk-header__content {\n    @include govuk-media-query ($from: desktop) {\n      width: 66.66%;\n      padding-left: $govuk-gutter-half;\n      float: left;\n    }\n  }\n\n  .govuk-header__menu-button {\n    @include govuk-font($size: 16);\n    display: none;\n    position: absolute;\n    top: govuk-spacing(4);\n    right: 0;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    color: $govuk-header-link;\n    background: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    &:focus {\n      @include govuk-focused-text;\n    }\n\n    &:after {\n      @include govuk-shape-arrow($direction: down, $base: 10px, $display: inline-block);\n      content: \"\";\n      margin-left: govuk-spacing(1);\n    }\n\n    @include govuk-media-query ($from: tablet) {\n      top: govuk-spacing(3);\n    }\n  }\n\n  .govuk-header__menu-button--open {\n    &:after {\n      @include govuk-shape-arrow($direction: up, $base: 10px, $display: inline-block);\n    }\n  }\n\n  .govuk-header__navigation {\n    @include govuk-responsive-margin(2, \"bottom\");\n    display: block;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .js-enabled {\n    .govuk-header__menu-button {\n      display: block;\n      @include govuk-media-query ($from: desktop) {\n        display: none;\n      }\n    }\n\n    .govuk-header__navigation {\n      display: none;\n      @include govuk-media-query ($from: desktop) {\n        display: block;\n      }\n    }\n\n    .govuk-header__navigation--open {\n      display: block;\n    }\n  }\n\n  .govuk-header__navigation--end {\n    @include govuk-media-query ($from: desktop) {\n      margin: 0;\n      padding: govuk-spacing(1) 0;\n      text-align: right;\n    }\n  }\n\n  .govuk-header__navigation--no-service-name {\n    padding-top: govuk-spacing(7);\n  }\n\n  .govuk-header__navigation-item {\n    padding: govuk-spacing(2) 0;\n    border-bottom: 1px solid $govuk-header-nav-item-border-color;\n\n    @include govuk-media-query ($from: desktop) {\n      display: inline-block;\n      margin-right: govuk-spacing(3);\n      padding: govuk-spacing(1) 0;\n      border: 0;\n    }\n\n    a {\n      @include govuk-font($size: 16, $weight: bold);\n      white-space: nowrap;\n    }\n  }\n\n  .govuk-header__navigation-item--active {\n    a {\n      &:link,\n      &:hover,\n      &:visited {\n        color: $govuk-header-link-active;\n      }\n\n      // When focussed, the text colour needs to be darker to ensure that colour\n      // contrast is still acceptable\n      &:focus {\n        color: $govuk-focus-text-colour;\n      }\n    }\n  }\n\n  .govuk-header__navigation-item:last-child {\n    margin-right: 0;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    .govuk-header {\n      border-bottom-width: 0;\n      color: govuk-colour(\"black\");\n      background: transparent;\n    }\n\n    // Hide the inverted crown when printing in browsers that don't support SVG.\n    .govuk-header__logotype-crown-fallback-image {\n      display: none;\n    }\n\n    .govuk-header__link {\n      &:link,\n      &:visited {\n        color: govuk-colour(\"black\");\n      }\n\n      // Do not append link href to GOV.UK link when printing (e.g. '(/)')\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  @if $govuk-use-legacy-font {\n    // Begin adjustments for font baseline offset\n    // These should be removed when the font is updated with the correct baseline\n    .govuk-header__logotype-crown,\n    .govuk-header__logotype-crown-fallback-image {\n      position: relative;\n      top: -4px;\n      vertical-align: middle;\n    }\n\n    .govuk-header {\n      $offset: 3px;\n      padding-top: $offset;\n    }\n\n    .govuk-header__link--homepage {\n      line-height: 30px;\n    }\n    // End adjustments\n  }\n}\n","////\n/// @group helpers/shapes\n////\n\n/// Calculate the height of an equilateral triangle\n///\n/// Multiplying half the length of the base of an equilateral triangle by the\n/// square root of three gives us its height. We use 1.732 as an approximation.\n///\n/// @param {Number} $base - Length of the base of the triangle\n/// @return {Number} Calculated height of the triangle\n/// @access private\n\n@function _govuk-equilateral-height($base) {\n  $square-root-of-three: 1.732;\n\n  @return ($base / 2) * $square-root-of-three;\n}\n\n/// Arrow mixin\n///\n/// Generate Arrows (triangles) by using a mix of transparent (1) and coloured\n/// borders. The coloured borders inherit the text colour of the element (2).\n///\n/// Ensure the arrow is rendered correctly if browser colours are overridden by\n/// providing a clip path (3). Without this the transparent borders are\n/// overridden to become visible which results in a square.\n///\n/// We need both because older browsers do not support clip-path.\n///\n/// @param {String} $direction - Direction for arrow: up, right, down, left.\n/// @param {Number} $base - Length of the triangle 'base' side\n/// @param {Number} $height [null] - Height of triangle. Omit for equilateral.\n/// @param {String} $display [block] - CSS display property of the arrow\n///\n/// @access public\n\n@mixin govuk-shape-arrow($direction, $base, $height: null, $display: block) {\n  display: $display;\n\n  width: 0;\n  height: 0;\n\n  border-style: solid;\n  border-color: transparent; // 1\n\n  $perpendicular: $base / 2;\n\n  @if ($height == null) {\n    $height: _govuk-equilateral-height($base);\n  }\n\n  @if $direction == \"up\" {\n    -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n            clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // 3\n\n    border-width: 0 $perpendicular $height $perpendicular;\n    border-bottom-color: inherit; // 2\n  } @else if $direction == \"right\" {\n    -webkit-clip-path: polygon(0% 0%, 100% 50%, 0% 100%);\n            clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // 3\n\n    border-width: $perpendicular 0 $perpendicular $height;\n    border-left-color: inherit; // 2\n  } @else if $direction == \"down\" {\n    -webkit-clip-path: polygon(0% 0%, 50% 100%, 100% 0%);\n            clip-path: polygon(0% 0%, 50% 100%, 100% 0%); // 3\n\n    border-width: $height $perpendicular 0 $perpendicular;\n    border-top-color: inherit; // 2\n  } @else if $direction == \"left\" {\n    -webkit-clip-path: polygon(0% 50%, 100% 100%, 100% 0%);\n            clip-path: polygon(0% 50%, 100% 100%, 100% 0%); // 3\n\n    border-width: $perpendicular $height $perpendicular 0;\n    border-right-color: inherit; // 2\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n}\n","@include govuk-exports(\"govuk/component/skip-link\") {\n  .govuk-skip-link {\n    @include govuk-visually-hidden-focusable;\n    @include govuk-typography-common;\n    @include govuk-link-style-text;\n    @include govuk-typography-responsive($size: 16);\n\n    display: block;\n    padding: govuk-spacing(2) govuk-spacing(3);\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (padding: unquote(\"max(calc(0px))\")) {\n      $padding-safe-area-right: calc(#{govuk-spacing(3)} + env(safe-area-inset-right));\n      $padding-safe-area-left: calc(#{govuk-spacing(3)} + env(safe-area-inset-left));\n\n      // Use max() to pick largest padding, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      padding-right: unquote(\"max(#{govuk-spacing(3)}, #{$padding-safe-area-right})\");\n      padding-left: unquote(\"max(#{govuk-spacing(3)}, #{$padding-safe-area-left})\");\n    }\n\n    &:focus {\n      outline: $govuk-focus-width solid $govuk-focus-colour;\n      outline-offset: 0;\n      background-color: $govuk-focus-colour;\n\n      // Undo unwanted changes when global styles are enabled\n      @if ($govuk-global-styles) {\n        box-shadow: none;\n        text-decoration: underline;\n      }\n    }\n  }\n}\n","////\n/// @group helpers/accessibility\n////\n\n/// Hide an element visually, but have it available for screen readers\n///\n/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n///   - Hiding Content for Accessibility, Jonathan Snook, February 2011\n/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158\n///   - h5bp/html5-boilerplate - Thanks!\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n}\n\n/// Hide an element visually, but have it available for screen readers whilst\n/// allowing the element to be focused when navigated to via the keyboard (e.g.\n/// for the skip link)\n///\n/// This is slightly less opinionated about borders and padding to make it\n/// easier to style the focussed element.\n///\n/// @param {Boolean} $important [true] - Whether to mark as `!important`\n///\n/// @access public\n\n@mixin govuk-visually-hidden-focusable($important: true) {\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n  clip: rect(0 0 0 0) if($important, !important, null);\n  -webkit-clip-path: inset(50%) if($important, !important, null);\n          clip-path: inset(50%) if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  &:active,\n  &:focus {\n    position: static if($important, !important, null);\n\n    width: auto if($important, !important, null);\n    height: auto if($important, !important, null);\n    margin: inherit if($important, !important, null);\n\n    overflow: visible if($important, !important, null);\n    clip: auto if($important, !important, null);\n    -webkit-clip-path: none if($important, !important, null);\n            clip-path: none if($important, !important, null);\n\n    white-space: inherit if($important, !important, null);\n  }\n}\n","@include govuk-exports(\"govuk/utilities/visually-hidden\") {\n  .govuk-visually-hidden {\n    @include govuk-visually-hidden;\n  }\n\n  .govuk-visually-hidden-focusable {\n    @include govuk-visually-hidden-focusable;\n  }\n}\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n// stylelint-disable declaration-no-important\n@include govuk-exports(\"govuk/overrides/display\") {\n  .govuk-\\!-display-inline {\n    display: inline !important;\n  }\n\n  .govuk-\\!-display-inline-block {\n    display: inline-block !important;\n  }\n\n  .govuk-\\!-display-block {\n    display: block !important;\n  }\n\n  .govuk-\\!-display-none {\n    display: none !important;\n  }\n\n  @include govuk-media-query($media-type: print) {\n    .govuk-\\!-display-none-print {\n      display: none !important;\n    }\n  }\n}\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n////\n/// @group overrides\n////\n\n/// Directions for spacing\n///\n/// @type Map\n/// @access private\n\n$_spacing-directions: (\n  \"top\",\n  \"right\",\n  \"bottom\",\n  \"left\"\n) !default;\n\n/// Spacing override classes\n///\n/// Generate spacing override classes for the given property (e.g. margin)\n/// for each point in the spacing scale.\n///\n/// @param {String} $property - Property to add spacing to (e.g. 'margin')\n///\n/// @example scss\n///   .govuk-\\!-margin-0 {\n///      margin: 0;\n///   }\n///\n///  .govuk-\\!-margin-top-1 {\n///     margin-top: [whatever spacing point 1 is...]\n///   }\n///\n/// @access private\n\n@mixin _govuk-generate-spacing-overrides($property) {\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $govuk-spacing-responsive-scale {\n\n    .govuk-\\!-#{$property}-#{$scale-point} {\n\n      @include _govuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n\n      .govuk-\\!-#{$property}-#{$direction}-#{$scale-point} {\n        @include _govuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n}\n\n@include govuk-exports(\"govuk/overrides/spacing\") {\n  @include _govuk-generate-spacing-overrides(\"margin\");\n  @include _govuk-generate-spacing-overrides(\"padding\");\n}\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n@include govuk-exports(\"govuk/overrides/typography\") {\n  // Font size and line height\n\n  // Generate typography override classes for each responsive font map in the\n  // typography scale eg .govuk-\\!-font-size-80\n  @each $size in map-keys($govuk-typography-scale) {\n    .govuk-\\!-font-size-#{$size} {\n      @include govuk-typography-responsive($size, $important: true);\n    }\n  }\n\n  // Weights\n\n  .govuk-\\!-font-weight-regular {\n    @include govuk-typography-weight-regular($important: true);\n  }\n\n  .govuk-\\!-font-weight-bold {\n    @include govuk-typography-weight-bold($important: true);\n  }\n}\n","@if not mixin-exists(\"govuk-exports\") {\n  @warn \"Importing items from the overrides layer without first importing `base` is deprecated, and will no longer work as of GOV.UK Frontend v4.0.\";\n}\n\n@import \"../base\";\n\n// stylelint-disable declaration-no-important\n@include govuk-exports(\"govuk/overrides/width\") {\n  .govuk-\\!-width-full {\n    width: 100% !important;\n  }\n\n  .govuk-\\!-width-three-quarters {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 75% !important;\n    }\n  }\n\n  .govuk-\\!-width-two-thirds {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 66.66% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-half {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 50% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-third {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 33.33% !important;\n    }\n  }\n\n  .govuk-\\!-width-one-quarter {\n    width: 100% !important;\n\n    @include govuk-media-query($from: tablet) {\n      width: 25% !important;\n    }\n  }\n}\n","/**\n An application event loader\n */\n@import \"dt-colours\";\n\n$loader_colour : $mojdi_colour_grey;\n$loader_colour_bg : $govuk-body-background-colour;\n\n.mojdi {\n    &-loader {\n        font-size: 10px;\n        margin: 50px 20px;\n        text-indent: -9999em;\n        width: 7em;\n        height: 7em;\n        border-radius: 50%;\n        background: #{$loader_colour};\n        background: -moz-linear-gradient(left, #{$loader_colour} 10%, rgba(97, 97, 97, 0) 42%);\n        background: -webkit-linear-gradient(left, #{$loader_colour} 10%, rgba(97, 97, 97, 0) 42%);\n        background: -o-linear-gradient(left, #{$loader_colour} 10%, rgba(97, 97, 97, 0) 42%);\n        background: -ms-linear-gradient(left, #{$loader_colour} 10%, rgba(97, 97, 97, 0) 42%);\n        background: linear-gradient(to right, #{$loader_colour} 10%, rgba(97, 97, 97, 0) 42%);\n        position: relative;\n        -webkit-animation: app_loader_frames 1.4s infinite linear;\n        animation: app_loader_frames 1.4s infinite linear;\n        -webkit-transform: translateZ(0);\n        -ms-transform: translateZ(0);\n        transform: translateZ(0);\n    }\n\n    &-loader:before {\n        width: 50%;\n        height: 50%;\n        background: #{$loader_colour};\n        border-radius: 100% 0 0 0;\n        position: absolute;\n        top: 0;\n        left: 0;\n        content: '';\n    }\n\n    &-loader:after {\n        background: #{$loader_colour_bg};\n        width: 75%;\n        height: 75%;\n        border-radius: 50%;\n        content: '';\n        margin: auto;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n    }\n}\n\n@-webkit-keyframes app_loader_frames {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n    }\n}\n@keyframes app_loader_frames {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n    }\n}\n",".highcharts-figure {\n    margin: 0;\n}\n"],"sourceRoot":""}